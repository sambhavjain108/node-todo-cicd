name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t node-app .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        run: echo "testing"

  push_to_dockerhub:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PASS }}

      - name: Build Docker Image
        run: docker build -t node-app .

      - name: Tag and Push Docker Image
        run: |
          docker tag node-app:latest ${{ secrets.DOCKERHUB_USER }}/node-app:latest
          docker push ${{ secrets.DOCKERHUB_USER }}/node-app:latest

  scan_with_trivy:
    name: Scan Docker Image with Trivy
    runs-on: ubuntu-latest
    needs: push_to_dockerhub
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan Docker Image and Save CSV Report
        run: |
          wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/template/csv.tpl -O csv.tpl
          trivy image --format template --template "@csv.tpl" -o trivy-report.csv --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USER }}/node-app:latest

      - name: Upload Trivy Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-report.csv

  deploy:
    name: Deploy App
    runs-on: [self-hosted, Linux, X64] # Make sure your EC2 runner uses these labels
    needs: scan_with_trivy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy with Docker Compose
        run: |
          docker-compose down
          docker-compose up -d

